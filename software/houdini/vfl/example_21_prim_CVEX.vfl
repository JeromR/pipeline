void testBound(string name)
{
    if (isbound(name))
	printf("%s is bound\n", name);
    else
	printf("%s is not bound\n", name);
}

cvex example_21_prim_CVEX (
     vector P=0;
     export vector POut=0;
     vector N=0;
     vector v=0;
     export vector vOut=0;
     vector Cd=0;
     export vector CdOut=0;
     float Alpha=0;
     export float AlphaOut=0;
     float pscale=0;
     int id=0;
     int inst_id=0;
     int mb_pass=0;
     float time = 0;
)
{
//    printf("Running example_21_prim_CVEX.vex\n");

/* 
    testBound("P");
    testBound("N");
    testBound("v");
    testBound("Cd");
    testBound("Alpha");
    testBound("pscale");
    testBound("id");
    testBound("inst_id");
    testBound("mb_pass");
*/

//     printf("P: %g\tN: %g\tv: %g\tAlpha: %g\tpscale: %g\n", P, N, v, Alpha, pscale);
     
    POut = P;  
    POut.y *= 1.15;    

//    vOut = v * 1.5;    
   vOut = v * random(inst_id) * (time + 0.1);

   if(mb_pass == 0) {
      CdOut = {.5, 0.9, 0.7} * Cd;
//      printf("CdOut: %g\n", CdOut);    
      }
   else {
      CdOut = {1, 1, 0}  * Cd;
//      printf("MB: CdOut: %g\n", CdOut);    
      }

//      CdOut = {1, .5, 0};
    
   AlphaOut = Alpha * 0.95;    

   
// printf("Cd: %g\tCdOut: %g\n", Cd, CdOut);    
// printf("mb_pass: %g\n", mb_pass);    
// printf("id: %g\n", id);    
// printf("inst_id: %g\n", inst_id);    
// printf("POut: %g\tNOut: %g\tAlphaOut: %g\tvOut: %g\tpscaleOut: %g\n", POut, NOut, AlphaOut, vOut, pscaleOut);


}
